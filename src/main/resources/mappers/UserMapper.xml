<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tuomi.develop.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.tuomi.develop.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="file" property="file" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="is_tel" property="isTel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, open_id, nick_name, token, status, file, tel, is_tel
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tuomi.develop.entity.User" >
    insert into user (id, open_id, nick_name, 
      token, status, file, 
      tel, is_tel)
    values (#{id,jdbcType=INTEGER}, #{openId,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{token,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{file,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{isTel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tuomi.develop.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="file != null" >
        file,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="isTel != null" >
        is_tel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="file != null" >
        #{file,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="isTel != null" >
        #{isTel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tuomi.develop.entity.User" >
    update user
    <set >
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="file != null" >
        file = #{file,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="isTel != null" >
        is_tel = #{isTel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tuomi.develop.entity.User" >
    update user
    set open_id = #{openId,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      file = #{file,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      is_tel = #{isTel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByOpenId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select * from `user` where open_id = #{openId}
  </select>

  <select id="selectAllTel" resultType="java.lang.String" >
    select tel from `user`
  </select>
	<select id="getAll" resultMap="BaseResultMap">
	select * from user
	</select>
</mapper>