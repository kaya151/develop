<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tuomi.develop.dao.DevelopProMapper" >
  <resultMap id="BaseResultMap" type="com.tuomi.develop.entity.DevelopPro" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="category" property="category" jdbcType="VARCHAR" />
    <result column="average_price" property="averagePrice" jdbcType="VARCHAR" />
    <result column="ratio" property="ratio" jdbcType="REAL" />
    <result column="development_time" property="developmentTime" jdbcType="INTEGER" />
    <result column="father_id" property="fatherId" jdbcType="INTEGER" />
    <result column="two_id" property="twoId" jdbcType="INTEGER" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="price_description" property="priceDescription" jdbcType="VARCHAR" />
    <collection property="competingProductsId" ofType="com.tuomi.develop.entity.CoPro" >
    	<id column="aid" property="id" jdbcType="BIGINT"/>
    	<result column="name" property="name" jdbcType="VARCHAR"/>
    	<result column="link" property="link" jdbcType="VARCHAR"/>
    	<result column="fid" property="fid" jdbcType="BIGINT"/>
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, category, average_price, ratio, development_time, father_id, two_id, img, price_description
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select dp.*,cp.id aid,cp.name,cp.link,cp.fid
	from develop_pro dp
	left join co_pro cp on dp.id=cp.fid
    where dp.id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from develop_pro
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tuomi.develop.entity.DevelopPro" >
    insert into develop_pro (id, category, average_price, 
      ratio, development_time, father_id, 
      two_id, img, price_description) 
    values (#{id,jdbcType=INTEGER}, #{category,jdbcType=VARCHAR}, #{averagePrice,jdbcType=VARCHAR}, 
      #{ratio,jdbcType=REAL}, #{developmentTime,jdbcType=INTEGER}, #{fatherId,jdbcType=INTEGER}, 
      #{twoId,jdbcType=INTEGER}, #{img,jdbcType=VARCHAR}, #{priceDescription,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tuomi.develop.entity.DevelopPro" >
    insert into develop_pro
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="averagePrice != null" >
        average_price,
      </if>
      <if test="ratio != null" >
        ratio,
      </if>
      <if test="developmentTime != null" >
        development_time,
      </if>
      <if test="fatherId != null" >
        father_id,
      </if>
      <if test="twoId != null" >
        two_id,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="priceDescription != null" >
        price_description,
      </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="category != null" >
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="averagePrice != null" >
        #{averagePrice,jdbcType=VARCHAR},
      </if>
      <if test="ratio != null" >
        #{ratio,jdbcType=REAL},
      </if>
      <if test="developmentTime != null" >
        #{developmentTime,jdbcType=INTEGER},
      </if>
      <if test="fatherId != null" >
        #{fatherId,jdbcType=INTEGER},
      </if>
      <if test="twoId != null" >
        #{twoId,jdbcType=INTEGER},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="priceDescription != null" >
        #{priceDescription,jdbcType=VARCHAR},
      </if>
     
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tuomi.develop.entity.DevelopPro" >
    update develop_pro
    <set >
      <if test="category != null" >
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="averagePrice != null" >
        average_price = #{averagePrice,jdbcType=VARCHAR},
      </if>
      <if test="ratio != null" >
        ratio = #{ratio,jdbcType=REAL},
      </if>
      <if test="developmentTime != null" >
        development_time = #{developmentTime,jdbcType=INTEGER},
      </if>
      <if test="fatherId != null" >
        father_id = #{fatherId,jdbcType=INTEGER},
      </if>
      <if test="twoId != null" >
        two_id = #{twoId,jdbcType=INTEGER},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="priceDescription != null" >
        price_description = #{priceDescription,jdbcType=VARCHAR},
      </if>
      
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tuomi.develop.entity.DevelopPro" >
    update develop_pro
    set category = #{category,jdbcType=VARCHAR},
      average_price = #{averagePrice,jdbcType=VARCHAR},
      ratio = #{ratio,jdbcType=REAL},
      development_time = #{developmentTime,jdbcType=INTEGER},
      father_id = #{fatherId,jdbcType=INTEGER},
      two_id = #{twoId,jdbcType=INTEGER},
      img = #{img,jdbcType=VARCHAR},
      price_description = #{priceDescription,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectListByTwoId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from develop_pro where two_id = #{twoId}
  </select>

  <select id="selectListByFatherId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from develop_pro where father_id = #{fatherId}
  </select>
  <select id="getPrByFidAndTid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select dp.* 
	from develop_pro dp
	where two_id=
	(select dt.id
	from develop_two dt
	where dt.father_id=(select id from develop_ass where id=#{fid}) and dt.id=#{tid}) and father_id=(select id from develop_ass where id=#{fid})
  </select>
  <update id="editPr">
  	update develop_pro
  	<set>
  		<if test="category!=null and category!=''">
  			category = #{category},
  		</if>
  		<if test="averagePrice!=null and averagePrice!=''">
  			average_price = #{averagePrice},
  		</if>
  		<if test="developmentTime!=null and developmentTime!=''">
  			development_time = #{developmentTime},
  		</if>
  		<if test="category!=null and category!=''">
  			competing_products = #{competingProducts}
  		</if>
  	</set>
  	<where>
  		id=#{id}
  	</where>
  </update>
  <select id="findPrByFid" resultMap="BaseResultMap">
  	select dp.*
	from develop_ass da
	left join develop_pro dp on da.id=dp.father_id
	where dp.two_id is null and da.id=#{fid}
  </select>
  <select id="getAll" resultMap="BaseResultMap">
  	select dp.*,cp.id aid,cp.name,cp.link,cp.fid
	from develop_pro dp
	left join co_pro cp on dp.id=cp.fid
  </select>
</mapper>