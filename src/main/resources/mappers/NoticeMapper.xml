<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tuomi.develop.dao.NoticeMapper" >
  <resultMap id="BaseResultMap" type="com.tuomi.develop.entity.Notice" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product" property="product" jdbcType="VARCHAR" />
    <result column="tips" property="tips" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="is_file" property="isFile" jdbcType="INTEGER" />
    <result column="reply_time" property="replyTime" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="p_id" property="pId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, product, tips, status, is_file, reply_time, user_id, p_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tuomi.develop.entity.Notice" >
    insert into notice (id, product, tips, 
      status, is_file, reply_time, 
      user_id, p_id)
    values (#{id,jdbcType=INTEGER}, #{product,jdbcType=VARCHAR}, #{tips,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{isFile,jdbcType=INTEGER}, #{replyTime,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{pId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tuomi.develop.entity.Notice" >
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="product != null" >
        product,
      </if>
      <if test="tips != null" >
        tips,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isFile != null" >
        is_file,
      </if>
      <if test="replyTime != null" >
        reply_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="pId != null" >
        p_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="product != null" >
        #{product,jdbcType=VARCHAR},
      </if>
      <if test="tips != null" >
        #{tips,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isFile != null" >
        #{isFile,jdbcType=INTEGER},
      </if>
      <if test="replyTime != null" >
        #{replyTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="pId != null" >
        #{pId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tuomi.develop.entity.Notice" >
    update notice
    <set >
      <if test="product != null" >
        product = #{product,jdbcType=VARCHAR},
      </if>
      <if test="tips != null" >
        tips = #{tips,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="isFile != null" >
        is_file = #{isFile,jdbcType=INTEGER},
      </if>
      <if test="replyTime != null" >
        reply_time = #{replyTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="pId != null" >
        p_id = #{pId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tuomi.develop.entity.Notice" >
    update notice
    set product = #{product,jdbcType=VARCHAR},
      tips = #{tips,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      is_file = #{isFile,jdbcType=INTEGER},
      reply_time = #{replyTime,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      p_id = #{pId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectNoticeTime" resultType="java.lang.String" parameterType="java.lang.Integer">
    select DISTINCT(reply_time) from notice where user_id = #{userId};
  </select>

  <select id="selectByReplyTime" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select * from notice where reply_time = #{replyTime} order by id DESC
  </select>

  <select id="selectByTimeAndUserId" resultMap="BaseResultMap" >
    select * from notice where reply_time = #{replyTime} and user_id=#{userId} order by id DESC
  </select>

  <select id="selectMaxId" resultType="java.lang.Integer" >
    select max(`id`) from notice
  </select>

  <select id="selectByManualId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from notice where p_id = #{manualId}
  </select>

  <delete id="deleteByManualId" parameterType="java.lang.Integer" >
    delete from notice where p_id = #{manualId}
  </delete>

</mapper>